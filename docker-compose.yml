services:
  # Ollama - Local LLM Server
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "8080:11434"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 16G
        reservations:
          cpus: '1'
          memory: 8G
    restart: unless-stopped

  # OpenWebUI - Web Interface for Ollama
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    volumes:
      - openwebui_data:/app/backend/data
    ports:
      - "8081:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 2G
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
    depends_on:
      - ollama
    restart: unless-stopped

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "8082:5678"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 6G
        reservations:
          cpus: '0.5'
          memory: 4G
    environment:
      - N8N_HOST=n8n.myn8n.com
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_USER_MANAGEMENT_DISABLED=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.myn8n.com/
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped

  # Minio - S3-compatible Object Storage
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    restart: unless-stopped

  # Adminer - Database Management
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8083:8080"
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:alpine
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # MongoDB for Content Storage
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-changeThisPassword}
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped

  # RabbitMQ for Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-changeThisPassword}
    restart: unless-stopped

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_ROOT_URL=https://monitor.myn8n.com
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

volumes:
  ollama_data:
  openwebui_data:
  minio_data:
  n8n_data:
  grafana_data:
  prometheus_data:
  redis_data:
  mongodb_data:
