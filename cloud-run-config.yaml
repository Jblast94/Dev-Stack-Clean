apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: dev-stack
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "5"
        run.googleapis.com/cpu-throttling: "false"
    spec:
      containers:
      - image: gcr.io/PROJECT_ID/dev-stack:latest
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: N8N_BASIC_AUTH_USER
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: N8N_BASIC_AUTH_USER
        - name: N8N_BASIC_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: N8N_BASIC_AUTH_PASSWORD
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: MINIO_ROOT_PASSWORD
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: MONGO_PASSWORD
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: RABBITMQ_PASSWORD
        - name: GRAFANA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-stack-secrets
              key: GRAFANA_PASSWORD
        volumeMounts:
        - name: data-volume
          mountPath: /data
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: dev-stack-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev-stack-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi